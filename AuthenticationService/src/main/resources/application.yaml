server:
  port: 8082

spring:
  application:
    name: AuthenticationService
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://47.104.169.101:3306/InfiniteChat?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
    username: root
    password: 12345
    hikari:
      # 设置最大连接池大小
      maximum-pool-size: 40
      # 设置最小空闲连接数
      minimum-idle: 20
      # 设置连接池初始化失败时的超时时间
      initialization-fail-timeout: 10000
      # 设置连接池的最大空闲时间
      idle-timeout: 30000
      # 设置连接池中连接的最大生命周期
      max-lifetime: 60000
      # 设置连接池的连接超时时间
      connection-timeout: 30000
      # 设置连接池的最大等待时间
      validation-timeout: 3000
      # 配置连接池验证SQL（根据数据库选择合适的SQL）
      connection-test-query: SELECT 1
      # 设置连接池的池化管理名称
      pool-name: HikariCP
  cloud:
    nacos:
      discovery:
        server-addr: 47.104.169.101:8848
  jmx:
    enabled: true
  redis:
    database: 0
    host: 47.104.169.101
    port: 6379
    password: e65K4t8w2

redisson:
  # 设置Redisson用于执行异步命令的线程数
  threads: 4  # 通常设置为CPU核心数的两倍，例如2核CPU设置为4

  # 设置Netty IO线程数，负责处理网络通信
  nettyThreads: 4  # 同样建议设置为CPU核心数的两倍

  # 设置编码器，决定数据的序列化和反序列化方式
  codec: org.redisson.codec.JsonJacksonCodec  # 使用JsonJacksonCodec进行JSON编码

  # 设置传输模式，NIO适用于大多数操作系统，EPOLL在Linux上性能更佳
  transportMode: "EPOLL"  # 或根据操作系统选择 "EPOLL"

  singleServerConfig:
    # Redis服务器地址，确保协议前缀正确（redis:// 或 rediss://）
    address: "redis://47.104.169.101/:6379"

    # 连接池的最大连接数，影响并发处理能力
    connectionPoolSize: 500  # 根据系统并发需求和Redis服务器承载能力设置

    # 连接池中最小空闲连接数，确保高峰期有足够连接可用
    connectionMinimumIdleSize: 100  # 通常设置为connectionPoolSize的10%-20%

    # 空闲连接的超时时间，超过该时间的空闲连接将被关闭
    idleConnectionTimeout: 10000  # 毫秒，通常设置为10000（10秒）

    # 建立新连接的超时时间
    connectTimeout: 3000  # 毫秒，建议设置为3000（3秒）

    # Redis命令执行的超时时间
    timeout: 5000  # 毫秒，根据命令执行时间设置，通常为3000-5000

    # 重试次数，当连接失败时重试的次数
    retryAttempts: 3  # 默认重试3次


    # 重试间隔，重试之间的等待时间
    retryInterval: 1500  # 毫秒，建议设置为1500（1.5秒）

    password: "e65K4t8w2"
    database: 0

#  暴露健康检查和性能监控端点（health、metrics）
management:
  endpoints:
    web:
      exposure:
        include: health,metrics
# 打印 sql
mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

minio:
  url: http://47.104.169.101:9000
  access-key: minioadmin
  secret-key: minioadmin